{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peter\\\\dev\\\\news-map\\\\frontend\\\\src\\\\components\\\\map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  const googleMapRef = useRef();\n  useEffect(() => {\n    const googleMapScript = document.createElement('script');\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places`;\n    googleMapScript.async = true;\n    window.document.body.appendChild(googleMapScript); // googleMapScript.addEventListener('load', () => {\n    //     getLatLng();\n    // });\n  }, []);\n\n  const createGoogleMap = coordinates => {\n    const googleMap = new window.google.maps.Map(googleMapRef.current, {\n      zoom: 16,\n      center: {\n        lat: coordinates.lat(),\n        lng: coordinates.lng()\n      },\n      disableDefaultUI: true\n    });\n  };\n\n  const getLatLng = () => {\n    let lat, lng, placeId, placeName;\n    new window.google.maps.Geocoder().geocode({\n      address: `${placeName}`\n    }, function (results, status) {\n      if (status === window.google.maps.GeocoderStatus.OK) {\n        placeId = results[0].place_id;\n        createGoogleMap(results[0].geometry.location);\n        lat = results[0].geometry.location.lat();\n        lng = results[0].geometry.location.lng();\n        new window.google.maps.Marker({\n          position: {\n            lat,\n            lng\n          },\n          map: googleMap,\n          animation: window.google.maps.Animation.DROP,\n          title: `${placeName}`\n        });\n      } else {\n        alert(\"Geocode was not successful for the following reason: \" + status);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"google-map\",\n    ref: googleMapRef,\n    style: {\n      width: '400px',\n      height: '300px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"Y0VbcuztHeUANOdthotyjUxY7g8=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Peter/dev/news-map/frontend/src/components/map.js"],"names":["React","useEffect","useRef","Map","googleMapRef","googleMapScript","document","createElement","src","process","env","REACT_APP_API_KEY","async","window","body","appendChild","createGoogleMap","coordinates","googleMap","google","maps","current","zoom","center","lat","lng","disableDefaultUI","getLatLng","placeId","placeName","Geocoder","geocode","address","results","status","GeocoderStatus","OK","place_id","geometry","location","Marker","position","map","animation","Animation","DROP","title","alert","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAMC,YAAY,GAAGF,MAAM,EAA3B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMI,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAxB;AACAF,IAAAA,eAAe,CAACG,GAAhB,GAAqB,+CAA8CC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,mBAAjG;AACAN,IAAAA,eAAe,CAACO,KAAhB,GAAwB,IAAxB;AACAC,IAAAA,MAAM,CAACP,QAAP,CAAgBQ,IAAhB,CAAqBC,WAArB,CAAiCV,eAAjC,EAJY,CAKZ;AACA;AACA;AACH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMW,eAAe,GAAIC,WAAD,IAAiB;AACrC,UAAMC,SAAS,GAAG,IAAIL,MAAM,CAACM,MAAP,CAAcC,IAAd,CAAmBjB,GAAvB,CAA2BC,YAAY,CAACiB,OAAxC,EAAiD;AAC/DC,MAAAA,IAAI,EAAE,EADyD;AAE/DC,MAAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAEP,WAAW,CAACO,GAAZ,EADD;AAEJC,QAAAA,GAAG,EAAER,WAAW,CAACQ,GAAZ;AAFD,OAFuD;AAM/DC,MAAAA,gBAAgB,EAAE;AAN6C,KAAjD,CAAlB;AAQH,GATD;;AAUA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIH,GAAJ,EAASC,GAAT,EAAcG,OAAd,EAAuBC,SAAvB;AACA,QAAIhB,MAAM,CAACM,MAAP,CAAcC,IAAd,CAAmBU,QAAvB,GAAkCC,OAAlC,CACI;AAAEC,MAAAA,OAAO,EAAG,GAAEH,SAAU;AAAxB,KADJ,EAEI,UAAUI,OAAV,EAAmBC,MAAnB,EAA2B;AACvB,UAAIA,MAAM,KAAKrB,MAAM,CAACM,MAAP,CAAcC,IAAd,CAAmBe,cAAnB,CAAkCC,EAAjD,EAAqD;AACrDR,QAAAA,OAAO,GAAGK,OAAO,CAAC,CAAD,CAAP,CAAWI,QAArB;AACArB,QAAAA,eAAe,CAACiB,OAAO,CAAC,CAAD,CAAP,CAAWK,QAAX,CAAoBC,QAArB,CAAf;AACAf,QAAAA,GAAG,GAAGS,OAAO,CAAC,CAAD,CAAP,CAAWK,QAAX,CAAoBC,QAApB,CAA6Bf,GAA7B,EAAN;AACAC,QAAAA,GAAG,GAAGQ,OAAO,CAAC,CAAD,CAAP,CAAWK,QAAX,CAAoBC,QAApB,CAA6Bd,GAA7B,EAAN;AACA,YAAIZ,MAAM,CAACM,MAAP,CAAcC,IAAd,CAAmBoB,MAAvB,CAA8B;AAC1BC,UAAAA,QAAQ,EAAE;AAAEjB,YAAAA,GAAF;AAAOC,YAAAA;AAAP,WADgB;AAE1BiB,UAAAA,GAAG,EAAExB,SAFqB;AAG1ByB,UAAAA,SAAS,EAAE9B,MAAM,CAACM,MAAP,CAAcC,IAAd,CAAmBwB,SAAnB,CAA6BC,IAHd;AAI1BC,UAAAA,KAAK,EAAG,GAAEjB,SAAU;AAJM,SAA9B;AAMC,OAXD,MAWO;AACPkB,QAAAA,KAAK,CACD,0DAA0Db,MADzD,CAAL;AAGH;AACJ,KAnBD;AAoBH,GAtBD;;AAwBA,sBACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAqB,IAAA,GAAG,EAAE9B,YAA1B;AAAwC,IAAA,KAAK,EAAE;AAAE4C,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B;AAA/C;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CAnDD;;GAAM9C,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst Map = () => {\r\n\r\n    const googleMapRef = useRef();\r\n    useEffect(() => {\r\n        const googleMapScript = document.createElement('script');\r\n        googleMapScript.src=`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places`;\r\n        googleMapScript.async = true;\r\n        window.document.body.appendChild(googleMapScript);\r\n        // googleMapScript.addEventListener('load', () => {\r\n        //     getLatLng();\r\n        // });\r\n    }, [])\r\n\r\n    const createGoogleMap = (coordinates) => {\r\n        const googleMap = new window.google.maps.Map(googleMapRef.current, {\r\n            zoom: 16,\r\n            center: {\r\n                lat: coordinates.lat(),\r\n                lng: coordinates.lng(),\r\n            },\r\n            disableDefaultUI: true,\r\n        });\r\n    };\r\n    const getLatLng = () => {\r\n        let lat, lng, placeId, placeName;\r\n        new window.google.maps.Geocoder().geocode(\r\n            { address: `${placeName}` },\r\n            function (results, status) {\r\n                if (status === window.google.maps.GeocoderStatus.OK) {\r\n                placeId = results[0].place_id;\r\n                createGoogleMap(results[0].geometry.location);\r\n                lat = results[0].geometry.location.lat();\r\n                lng = results[0].geometry.location.lng();\r\n                new window.google.maps.Marker({\r\n                    position: { lat, lng },\r\n                    map: googleMap,\r\n                    animation: window.google.maps.Animation.DROP,\r\n                    title: `${placeName}`,\r\n                });\r\n                } else {\r\n                alert(\r\n                    \"Geocode was not successful for the following reason: \" + status\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div id=\"google-map\" ref={googleMapRef} style={{ width: '400px', height: '300px' }}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}